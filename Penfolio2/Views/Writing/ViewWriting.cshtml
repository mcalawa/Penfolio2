@model Penfolio2.Models.Writing
@{
}

@if (ViewBag.Author)
{
    <div class="right-align">
        <span class="forUserWriting"><a href="/Writing/Edit/@Model.WritingId">Edit</a> | <a href="/Writing/Delete/@Model.WritingId">Delete</a></span>
    </div>
}
<h2 class="clear-right">@Model.Title</h2>
@await Component.InvokeAsync("Writing", new { viewName = "Author", id = Model.WritingId })

<div id="content" class="ql-editor">@Html.Raw(ViewBag.Document)</div>

@if(ViewBag.Author)
{
    <hr />
    @if (!Model.AccessPermission.PublicAccess)
    {
        <h4>Individual Access Grantees</h4>
        @foreach (var grant in Model.AccessPermission.IndividualAccessGrants.Where(i => i.Active).ToList())
        {
            var grantRoleName = grant.Grantee.UseSecondaryRoleName && grant.Grantee.RoleId == 2 ? "Literary Agent" : grant.Grantee.RoleId == 2 ? "Publisher" : "Writer";
            <span><a href="/Profile/@grant.Grantee.UrlString">@grant.Grantee.DisplayName (@grantRoleName)</a> | <a href="/Notification/RemoveIndividualAccessGrant/@grant.IndividualAccessGrantId">Remove Individual Access Grant</a></span>
        }
    }

    <h4>Individual Access Revokees</h4>
    @foreach (var revoke in Model.AccessPermission.IndividualAccessRevokes.Where(i => i.Active).ToList())
    {
        var revokeRoleName = revoke.Revokee.UseSecondaryRoleName && revoke.Revokee.RoleId == 2 ? "Literary Agent" : revoke.Revokee.RoleId == 2 ? "Publisher" : "Writer";
        <span><a href="/Profile/@revoke.Revokee.UrlString">@revoke.Revokee.DisplayName (@revokeRoleName)</a> | <a href="/Notification/RemoveIndividualAccessRevoke/@revoke.IndividualAccessRevokeId">Remove Individual Access Revoke</a></span>
    }
}

@Html.ActionLink("Back to List", "Index")